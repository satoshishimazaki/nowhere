  <div id="gmap">
  <div class="map_container">
    <div id="map" class="map_canvas"></div>
  </div>
 </div>
  <div id="content-pane">
      <!-- <div id="inputs">
        <p><button type="button" id="calculate">Calculate
          distances</button></p>
      </div> -->
        <div class="store_article">
          <div id="favorite_index" >
            <p><strong>記事一覧</strong></p>
                    <% @articles.each do | article | %> 
                  <hr>  
                     <li><%=article_image_for article.article_images.map{|articleimage| articleimage.image }.first %>
                      　<span>タイトル：<%=link_to article.title[0..10], article_path(article.id) %>...  </span><br>
                      　<span>店舗名：<%=link_to article.store.name, article_path(article.id) %>...</span><br>
                        <span>Like数：<%=article.favorites.count %></span>
                     </li>
                   </hr>
                   <% end %>
            </div>
          </div>
    </div>
    <div id="map-canvas"></div>
   <script type="text/javascript">
   $(function(){
      handler = Gmaps.build('Google');
          handler.buildMap({ provider: {}, internal: {id: 'map'}}, 
          function(){
            markers = handler.addMarkers(<%=raw @hash.to_json %>);
            handler.bounds.extendWith(markers);
            handler.fitMapToBounds();
            handler.getMap().setCenter(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));
            // handler.getMap().setZoom(15);
          });

          var map;
          var geocoder;
          var bounds = new google.maps.LatLngBounds();
          var markersArray = [];

          // var origin1 = position;
          // var origin2 = 'Greenwich, England';
          // var destinationA = <%= raw @article_address.to_json %>;
          // var destinationB = new google.maps.LatLng(50.087, 14.421);

          var destinationIcon = 'https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=D|FF0000|000000';
          var originIcon = 'https://chart.googleapis.com/chart?chst=d_map_pin_letter&chld=O|FFFF00|000000';

          // function initialize() {
          //   var opts = {
          //     center: new google.maps.LatLng(55.53, 9.4),
          //     zoom: 10
          //   };
          //   map = new google.maps.Map(document.getElementById('map-canvas'), opts);
          //   geocoder = new google.maps.Geocoder();
          // }

          $(document).ready(function(){
            navigator.geolocation.getCurrentPosition(successCallback, errorCallback);

            /***** ユーザーの現在の位置情報を取得 *****/
            function successCallback(position) {


              function callback(response, status) {
                if (status != google.maps.DistanceMatrixStatus.OK) {
                  alert('Error was: ' + status);
                } else {
                  var origins = response.originAddresses;
                  var destinations = response.destinationAddresses;
                  var outputDiv = document.getElementById('outputDiv');
                  outputDiv.innerHTML = '';
                  // deleteOverlays();

                  for (var i = 0; i < destinations.length; i++) {
                    var results = response.rows[i].elements;
                    // addMarker(origins[i], false);
                    for (var j = 0; j < results.length; j++) {
                      // addMarker(destinations[j], true);
                      outputDiv.innerHTML += origins[i] + ' to ' + destinations[j]
                          + ': ' + results[j].distance.text + ' in '
                          + results[j].duration.text + '<br>';
                    }
                  }
                }
              }

              var service = new google.maps.DistanceMatrixService();
              service.getDistanceMatrix(
                {
                  origins: [new google.maps.LatLng(position.coords.latitude, position.coords.longitude)],
                  destinations: [<%= raw @article_address.join(",") %>],
                  travelMode: google.maps.TravelMode.DRIVING,
                  unitSystem: google.maps.UnitSystem.METRIC,
                  avoidHighways: false,
                  avoidTolls: false
                }, callback);
            }

            /***** 位置情報が取得できない場合 *****/
            function errorCallback(error) {
              var err_msg = "";
              switch(error.code)
              {
                case 1:
                  err_msg = "位置情報の利用が許可されていません";
                  break;
                case 2:
                  err_msg = "デバイスの位置が判定できません";
                  break;
                case 3:
                  err_msg = "タイムアウトしました";
                  break;
              }
              document.getElementById("show_result").innerHTML = err_msg;
              //デバッグ用→ document.getElementById("show_result").innerHTML = error.message;
            }
          });
   });
        

      </script>